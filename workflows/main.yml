name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      - name: Discord Commit Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2

      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v2

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      # - name: Run tests
      #   uses: game-ci/unity-test-runner@v2
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   with:
      #     githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL

      - name: Discord Build Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'The project `{{ EVENT_PAYLOAD.repository.full_name }}` has been successfully built for WebGL'

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

      # Deploy
      - name: S3 Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          AWS_REGION: ${{ secrets.S3_BUCKET_REGION }}
        run: |
          aws s3 cp build/WebGL/WebGL s3://${{ secrets.S3_BUCKET }} --recursive --exclude "*.br"
          aws s3 cp build/WebGL/WebGL s3://${{ secrets.S3_BUCKET }} --recursive --exclude "*" --include "*.br" --exclude "*.wasm.br" --content-type binary/octet-stream --content-encoding br
          aws s3 cp build/WebGL/WebGL s3://${{ secrets.S3_BUCKET }} --recursive --exclude "*" --include "*.wasm.br" --content-type application/wasm --content-encoding br
          aws cloudfront create-invalidation --distribution-id E3IJL1XZ6KZMG2 --paths "/*"

      - name: Discord Deploy Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'The project `{{ EVENT_PAYLOAD.repository.full_name }}` has been deployed to s3: https://d28g9u00nypb4u.cloudfront.net'
